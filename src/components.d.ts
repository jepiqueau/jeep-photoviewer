/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Image, JeepPhotoViewerResult, ViewerOptions } from "./interfaces/interfaces";
export namespace Components {
    interface JeepPhotoButtons {
        "closebutton": string;
        /**
          * Method initialize
         */
        "init": () => Promise<void>;
        /**
          * Set the Navigation Visibility (visible/hidden)
         */
        "setJeepPhotoButtonsVisibility": (state: boolean) => Promise<void>;
        /**
          * Set the Photo Buttons.
         */
        "setPhotoButtons": () => Promise<void>;
        /**
          * Share button visible
         */
        "share": string;
        /**
          * Mode "fullscreen" / "normal"
         */
        "viewmode": string;
    }
    interface JeepPhotoHscroll {
        /**
          * The Image List
         */
        "imageList": Image[];
        /**
          * Method initialize
         */
        "init": () => Promise<void>;
        /**
          * The photoviewer mode ('gallery':'one')
         */
        "mode": string;
        /**
          * The photoviewer options
         */
        "options": ViewerOptions;
        /**
          * The selected position
         */
        "position": number;
        /**
          * Set the Carousel.
         */
        "setCarousel": () => Promise<void>;
    }
    interface JeepPhotoShare {
        /**
          * Method initialize
         */
        "init": () => Promise<void>;
        /**
          * Set the Share.
         */
        "setShare": () => Promise<void>;
        /**
          * The text to share
         */
        "stext": string;
        /**
          * The photo title to share
         */
        "stitle": string;
        /**
          * The photo url to share
         */
        "surl": string;
    }
    interface JeepPhotoZoom {
        /**
          * Method initialize
         */
        "init": () => Promise<void>;
        /**
          * The maximum zoom scale
         */
        "maxzoomscale": number;
        /**
          * Set the Photo.
         */
        "setPhoto": () => Promise<void>;
        /**
          * The photo url
         */
        "url": string;
    }
    interface JeepPhotoviewer {
        "closePhotoHScroll": () => Promise<void>;
        /**
          * The Image List
         */
        "imageList": Image[];
        /**
          * Method initialize
         */
        "init": () => Promise<void>;
        /**
          * The photoviewer options
         */
        "options": ViewerOptions;
    }
}
declare global {
    interface HTMLJeepPhotoButtonsElement extends Components.JeepPhotoButtons, HTMLStencilElement {
    }
    var HTMLJeepPhotoButtonsElement: {
        prototype: HTMLJeepPhotoButtonsElement;
        new (): HTMLJeepPhotoButtonsElement;
    };
    interface HTMLJeepPhotoHscrollElement extends Components.JeepPhotoHscroll, HTMLStencilElement {
    }
    var HTMLJeepPhotoHscrollElement: {
        prototype: HTMLJeepPhotoHscrollElement;
        new (): HTMLJeepPhotoHscrollElement;
    };
    interface HTMLJeepPhotoShareElement extends Components.JeepPhotoShare, HTMLStencilElement {
    }
    var HTMLJeepPhotoShareElement: {
        prototype: HTMLJeepPhotoShareElement;
        new (): HTMLJeepPhotoShareElement;
    };
    interface HTMLJeepPhotoZoomElement extends Components.JeepPhotoZoom, HTMLStencilElement {
    }
    var HTMLJeepPhotoZoomElement: {
        prototype: HTMLJeepPhotoZoomElement;
        new (): HTMLJeepPhotoZoomElement;
    };
    interface HTMLJeepPhotoviewerElement extends Components.JeepPhotoviewer, HTMLStencilElement {
    }
    var HTMLJeepPhotoviewerElement: {
        prototype: HTMLJeepPhotoviewerElement;
        new (): HTMLJeepPhotoviewerElement;
    };
    interface HTMLElementTagNameMap {
        "jeep-photo-buttons": HTMLJeepPhotoButtonsElement;
        "jeep-photo-hscroll": HTMLJeepPhotoHscrollElement;
        "jeep-photo-share": HTMLJeepPhotoShareElement;
        "jeep-photo-zoom": HTMLJeepPhotoZoomElement;
        "jeep-photoviewer": HTMLJeepPhotoviewerElement;
    }
}
declare namespace LocalJSX {
    interface JeepPhotoButtons {
        "closebutton"?: string;
        /**
          * Emitted when the close button was clicked
         */
        "onJeepPhotoButtonsClose"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when the share button was clicked
         */
        "onJeepPhotoButtonsShare"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when the fullscreen mode button was clicked
         */
        "onJeepPhotoRequestFullscreen"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when the minimize mode button was clicked
         */
        "onJeepPhotoRequestMinimize"?: (event: CustomEvent<void>) => void;
        /**
          * Share button visible
         */
        "share"?: string;
        /**
          * Mode "fullscreen" / "normal"
         */
        "viewmode"?: string;
    }
    interface JeepPhotoHscroll {
        /**
          * The Image List
         */
        "imageList"?: Image[];
        /**
          * The photoviewer mode ('gallery':'one')
         */
        "mode"?: string;
        /**
          * Emitted when an error occurs or a message has to be sent
         */
        "onJeepPhotoHscrollResult"?: (event: CustomEvent<JeepPhotoViewerResult>) => void;
        /**
          * The photoviewer options
         */
        "options"?: ViewerOptions;
        /**
          * The selected position
         */
        "position"?: number;
    }
    interface JeepPhotoShare {
        /**
          * Emitted when the close button was clicked
         */
        "onJeepPhotoShareCompleted"?: (event: CustomEvent<JeepPhotoViewerResult>) => void;
        /**
          * The text to share
         */
        "stext"?: string;
        /**
          * The photo title to share
         */
        "stitle"?: string;
        /**
          * The photo url to share
         */
        "surl"?: string;
    }
    interface JeepPhotoZoom {
        /**
          * The maximum zoom scale
         */
        "maxzoomscale"?: number;
        /**
          * Emitted when the close button was clicked
         */
        "onJeepPhotoZoomOneTap"?: (event: CustomEvent<void>) => void;
        /**
          * The photo url
         */
        "url"?: string;
    }
    interface JeepPhotoviewer {
        /**
          * The Image List
         */
        "imageList"?: Image[];
        /**
          * Emitted when an error occurs or a message to be sent
         */
        "onJeepPhotoViewerResult"?: (event: CustomEvent<JeepPhotoViewerResult>) => void;
        /**
          * The photoviewer options
         */
        "options"?: ViewerOptions;
    }
    interface IntrinsicElements {
        "jeep-photo-buttons": JeepPhotoButtons;
        "jeep-photo-hscroll": JeepPhotoHscroll;
        "jeep-photo-share": JeepPhotoShare;
        "jeep-photo-zoom": JeepPhotoZoom;
        "jeep-photoviewer": JeepPhotoviewer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "jeep-photo-buttons": LocalJSX.JeepPhotoButtons & JSXBase.HTMLAttributes<HTMLJeepPhotoButtonsElement>;
            "jeep-photo-hscroll": LocalJSX.JeepPhotoHscroll & JSXBase.HTMLAttributes<HTMLJeepPhotoHscrollElement>;
            "jeep-photo-share": LocalJSX.JeepPhotoShare & JSXBase.HTMLAttributes<HTMLJeepPhotoShareElement>;
            "jeep-photo-zoom": LocalJSX.JeepPhotoZoom & JSXBase.HTMLAttributes<HTMLJeepPhotoZoomElement>;
            "jeep-photoviewer": LocalJSX.JeepPhotoviewer & JSXBase.HTMLAttributes<HTMLJeepPhotoviewerElement>;
        }
    }
}
